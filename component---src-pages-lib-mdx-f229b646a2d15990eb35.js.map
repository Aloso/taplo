{"version":3,"sources":["webpack:///./src/pages/lib.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-lib-mdx-f229b646a2d15990eb35.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/taplo/taplo/site/src/components/doc-page-layout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rust\"\n    }}>{`Rust`}</h1>\n    <p>{`The full API documentation with examples is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.rs/taplo/\"\n      }}>{`here`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`The library is published at `}<a parentName=\"p\" {...{\n        \"href\": \"https://crates.io/crates/taplo\"\n      }}>{`Crates.io`}</a>{`.`}</p>\n    <p>{`To use the latest version, add it to your dependencies:`}</p>\n    <p><inlineCode parentName=\"p\">{`taplo = \"*\"`}</inlineCode></p>\n    <p>{`The available features can be found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.rs/taplo/\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Linting`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Validation (based on JSON schema)`}</strong>{` with the help of `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GREsau/schemars\"\n        }}>{`Schemars`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/tamasfe/verify\"\n        }}>{`Verify`}</a></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Lossless syntax-tree`}</strong>{` every token is preserved as-is`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`JSON-like DOM Tree`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Serialization To Other Formats`}</strong>{` with `}<a parentName=\"li\" {...{\n          \"href\": \"https://serde.rs/\"\n        }}>{`Serde`}</a></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`DOM Manipulation`}</strong>{` (`}<strong parentName=\"li\">{`WIP`}</strong>{`) Rewriting parts of the DOM while not touching anything else`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Formatting`}</strong>{` With configurable options`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Scoped Formatting Options`}</strong>{` Formatting options that affect only a part of the document`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"comparison-to-toml-rs\"\n    }}>{`Comparison To `}<a parentName=\"h2\" {...{\n        \"href\": \"https://github.com/alexcrichton/toml-rs\"\n      }}>{`toml-rs`}</a></h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/alexcrichton/toml-rs\"\n      }}>{`toml-rs`}</a>{` focuses more on the data inside TOML documents, while Taplo cares about the TOML document itself, the position of comments is just as important as the data.`}</p>\n    <p>{`While there is some overlap in functionality, the two tools serve different purposes, in fact `}<a parentName=\"p\" {...{\n        \"href\": \"/cli\"\n      }}>{`Taplo CLI`}</a>{` actually uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/alexcrichton/toml-rs\"\n      }}>{`toml-rs`}</a>{` for reading its own configuration file.`}</p>\n    <p>{`All this also means, that Taplo will always be slower by nature, however not by much (`}<em parentName=\"p\">{`as of Taplo `}<inlineCode parentName=\"em\">{`0.1.0`}</inlineCode></em>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`test bench_taplo_parse          ... bench:     109,804 ns/iter (+/- 1,187)\ntest bench_taplo_parse_validate ... bench:     220,236 ns/iter (+/- 6,148)\ntest bench_toml_rs              ... bench:     140,089 ns/iter (+/- 1,392)\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h1>\n    <p>{`Taplo can also be used in Node.js and browsers that support running `}<a parentName=\"p\" {...{\n        \"href\": \"https://webassembly.org\"\n      }}>{`WebAssembly`}</a>{`,\nit has no additional dependencies and is contained in a single `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"installation-1\"\n    }}>{`Installation`}</h2>\n    <p>{`The library is available as a NPM package `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@taplo/lib\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`Install with Yarn:`}</p>\n    <p><inlineCode parentName=\"p\">{`yarn add @taplo/lib`}</inlineCode></p>\n    <p>{`Or with NPM:`}</p>\n    <p><inlineCode parentName=\"p\">{`npm install --save @taplo/lib`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"features-1\"\n    }}>{`Features`}</h2>\n    <p>{`The features are limited compared to the Rust library. There are plans to expose everything that Taplo can offer, however it is not trivial and requires some effort.`}</p>\n    <p>{`Currently only a high-level API is provided for the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Linting`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Validation (based on JSON schema)`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Formatting`}</strong>{`: With configurable options`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`JSON Conversion`}</strong>{`: From/to JavaScript objects and JSON strings`}</li>\n    </ul>\n    <p>{`TypeScript typings and documentation are available.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Only a single `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:8080/api/javaScript/classes/_index_.taplo/#class-taplo\"\n      }}><inlineCode parentName=\"a\">{`Taplo`}</inlineCode></a>{` class is exported, and every operation can be done through it.`}</p>\n    <p>{`It must be initialized asynchronously with its `}<a parentName=\"p\" {...{\n        \"href\": \"/api/javaScript/classes/_index_.taplo/#initialize\"\n      }}><inlineCode parentName=\"a\">{`initialize`}</inlineCode></a>{` method, `}<strong parentName=\"p\">{`any attempts to create it with `}<inlineCode parentName=\"strong\">{`new`}</inlineCode>{` will throw an error`}</strong>{`.\nThis is needed because the WebAssembly module has to be compiled before use.`}</p>\n    <p>{`The initialization is rather expensive, but it has to be done once and subsequent calls to `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` will be basically free.`}</p>\n    <p>{`An example usage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Taplo } from \"taplo\";\n\nconst toml = await Taplo.initialize();\n\nconst formatted = toml.format(\"   [lib]   \");\nconsole.assert(formatted === \"[lib]\\\\n\");\n\nconst obj = toml.decode<{ key: boolean }>(\"key = true\");\nconsole.assert(obj.key);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}